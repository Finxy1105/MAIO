name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Extract version
        id: vars
        run: echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
      - name: Decide model type by version
        id: model
        run: |
          if [[ "${{ steps.vars.outputs.version }}" == v0.2* ]]; then
            echo "type=ridge" >> $GITHUB_OUTPUT
          else
            echo "type=lin" >> $GITHUB_OUTPUT
          fi
      - name: Train
        run: |
          python -m src.train --version ${{ steps.vars.outputs.version }} --model ${{ steps.model.outputs.type }} --seed 42
      
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: |
          docker build --build-arg MODEL_VERSION=${{ steps.vars.outputs.version }} -t $IMAGE_NAME:${{ steps.vars.outputs.version }} .
      - name: Smoke test container
        run: |
          docker run -d -p 8000:8000 --name triage $IMAGE_NAME:${{ steps.vars.outputs.version }}
          sleep 5
          curl -f http://localhost:8000/health
          curl -f -X POST http://localhost:8000/predict -H 'Content-Type: application/json' -d '{"age":0.02,"sex":-0.044,"bmi":0.06,"bp":-0.03,"s1":-0.02,"s2":0.03,"s3":-0.02,"s4":0.02,"s5":0.02,"s6":-0.001}'
          docker logs triage
          docker rm -f triage
      - name: Push image
        run: docker push $IMAGE_NAME:${{ steps.vars.outputs.version }}
      - name: Create Release Notes
        id: notes
        run: |
          echo "## Metrics" > notes.md
          cat models/metrics-${{ steps.vars.outputs.version }}.json >> notes.md || true
          echo "\nSee CHANGELOG.md for details." >> notes.md
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.version }}
          name: ${{ steps.vars.outputs.version }}
          body_path: notes.md


